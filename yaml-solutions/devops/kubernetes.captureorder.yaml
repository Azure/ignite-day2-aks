apiVersion: apps/v1
kind: Deployment
metadata:
  name: captureorder
spec:
  selector:
    matchLabels:
      app: captureorder
  template:
    metadata:
      labels:
        app: captureorder
    spec:
      containers:
      - name: captureorder
        image: akschallengeregistry.azurecr.io/captureorder:##BUILD_ID##
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            port: 8080
            path: /healthz
        livenessProbe:
          httpGet:
            port: 8080
            path: /healthz
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: TEAMNAME
          value: "team-azch"
        - name: AMQPURL
          valueFrom:
            secretKeyRef:
              name: service-bus-connection
              key: amqp-url
        - name: MONGOHOST
          value: "akschallengecosmos.documents.azure.com"
        - name: MONGOUSER
          value: "akschallengecosmos"
        - name: MONGOPASSWORD
          valueFrom:
            secretKeyRef:
              name: cosmosdb-connection
              key: primarykey
        ports:
        - containerPort: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: captureorder
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: captureorder
  minReplicas: 4
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: v1
kind: Service
metadata:
  name: captureorder
spec:
  selector:
    app: captureorder
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azurefile
provisioner: kubernetes.io/azure-file
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=1000
  - gid=1000
parameters:
  skuName: Standard_LRS
  storageAccount: akschallenge
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:azure-cloud-provider
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:azure-cloud-provider
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:azure-cloud-provider
subjects:
  - kind: ServiceAccount
    name: persistent-volume-binder
    namespace: kube-system
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ordersfiles
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi